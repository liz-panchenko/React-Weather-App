{"ast":null,"code":"var _jsxFileName = \"/Users/ielyzavetapanchenko/Documents/GitHub/React-Weather-App/src/SearchEngine.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchEngine(props) {\n  _s();\n\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [searchInput, setSearchInput] = useState(\"London\");\n\n  if (isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"SearchEngine\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        className: \"search-input\",\n        autoComplete: \"off\",\n        placeholder: \"City\",\n        value: sear,\n        onChange: updateSearchInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-button\",\n        type: \"submit\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"search-button-text\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"search-icon fas fa-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  } else {\n    makeAPIrequest();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  function makeAPIrequest() {\n    setIsLoaded(true);\n    setSearchInput(\"\");\n    let apiKey = \"999ce561ec0a25a794172c87e6a0379b\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${searchInput}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(getApiInfo);\n  }\n\n  function getApiInfo(response) {\n    props.setSearchResults(response.data);\n    forecastAPIrequest(response.data.coord);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    makeAPIrequest();\n  }\n\n  function updateSearchInput(event) {\n    setSearchInput(event.target.value);\n  } ////////////////////////////Forecast\n\n\n  function forecastAPIdata(response) {\n    props.setForecastResults(response.data.daily);\n  }\n\n  function forecastAPIrequest(props) {\n    let longitude = props.lon;\n    let latitude = props.lat;\n    let apiKey = \"999ce561ec0a25a794172c87e6a0379b\";\n    let forecastAPIurl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&exclude=current,hourly,minutely,alerts&appid=${apiKey}&units=metric`;\n    axios.get(forecastAPIurl).then(forecastAPIdata);\n  }\n}\n\n_s(SearchEngine, \"Q53er7Mmw4YRafHV/vgcak2BJlM=\");\n\n_c = SearchEngine;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchEngine\");","map":{"version":3,"sources":["/Users/ielyzavetapanchenko/Documents/GitHub/React-Weather-App/src/SearchEngine.js"],"names":["React","useState","axios","SearchEngine","props","isLoaded","setIsLoaded","searchInput","setSearchInput","handleSubmit","sear","updateSearchInput","makeAPIrequest","apiKey","apiUrl","get","then","getApiInfo","response","setSearchResults","data","forecastAPIrequest","coord","event","preventDefault","target","value","forecastAPIdata","setForecastResults","daily","longitude","lon","latitude","lat","forecastAPIurl"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,QAAD,CAA9C;;AACA,MAAII,QAAJ,EAAc;AACZ,wBACE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,QAAQ,EAAEI,YAAzC;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,YAAY,EAAC,KAHf;AAIE,QAAA,WAAW,EAAC,MAJd;AAKE,QAAA,KAAK,EAAEC,IALT;AAME,QAAA,QAAQ,EAAEC;AANZ;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAkC,QAAA,IAAI,EAAC,QAAvC;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD,GAjBD,MAiBO;AACLC,IAAAA,cAAc;AACd,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,WAASA,cAAT,GAA0B;AACxBN,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACA,QAAIK,MAAM,GAAG,kCAAb;AACA,QAAIC,MAAM,GAAI,qDAAoDP,WAAY,UAASM,MAAO,eAA9F;AACAX,IAAAA,KAAK,CAACa,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBC,UAAvB;AACD;;AACD,WAASA,UAAT,CAAoBC,QAApB,EAA8B;AAC5Bd,IAAAA,KAAK,CAACe,gBAAN,CAAuBD,QAAQ,CAACE,IAAhC;AACAC,IAAAA,kBAAkB,CAACH,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAAlB;AACD;;AAED,WAASb,YAAT,CAAsBc,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAZ,IAAAA,cAAc;AACf;;AAED,WAASD,iBAAT,CAA2BY,KAA3B,EAAkC;AAChCf,IAAAA,cAAc,CAACe,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAd;AACD,GA3CyC,CA4C1C;;;AACA,WAASC,eAAT,CAAyBT,QAAzB,EAAmC;AACjCd,IAAAA,KAAK,CAACwB,kBAAN,CAAyBV,QAAQ,CAACE,IAAT,CAAcS,KAAvC;AACD;;AACD,WAASR,kBAAT,CAA4BjB,KAA5B,EAAmC;AACjC,QAAI0B,SAAS,GAAG1B,KAAK,CAAC2B,GAAtB;AACA,QAAIC,QAAQ,GAAG5B,KAAK,CAAC6B,GAArB;AACA,QAAIpB,MAAM,GAAG,kCAAb;AACA,QAAIqB,cAAc,GAAI,uDAAsDF,QAAS,QAAOF,SAAU,iDAAgDjB,MAAO,eAA7J;AACAX,IAAAA,KAAK,CAACa,GAAN,CAAUmB,cAAV,EAA0BlB,IAA1B,CAA+BW,eAA/B;AACD;AACF;;GAvDuBxB,Y;;KAAAA,Y","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function SearchEngine(props) {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [searchInput, setSearchInput] = useState(\"London\");\n  if (isLoaded) {\n    return (\n      <form className=\"SearchEngine\" onSubmit={handleSubmit}>\n        <input\n          type=\"search\"\n          className=\"search-input\"\n          autoComplete=\"off\"\n          placeholder=\"City\"\n          value={sear}\n          onChange={updateSearchInput}\n        />\n        <button className=\"search-button\" type=\"submit\">\n          <span className=\"search-button-text\">Search</span>\n          <i className=\"search-icon fas fa-search\"></i>\n        </button>\n      </form>\n    );\n  } else {\n    makeAPIrequest();\n    return <div>Loading....</div>;\n  }\n  function makeAPIrequest() {\n    setIsLoaded(true);\n    setSearchInput(\"\");\n    let apiKey = \"999ce561ec0a25a794172c87e6a0379b\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${searchInput}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(getApiInfo);\n  }\n  function getApiInfo(response) {\n    props.setSearchResults(response.data);\n    forecastAPIrequest(response.data.coord);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    makeAPIrequest();\n  }\n\n  function updateSearchInput(event) {\n    setSearchInput(event.target.value);\n  }\n  ////////////////////////////Forecast\n  function forecastAPIdata(response) {\n    props.setForecastResults(response.data.daily);\n  }\n  function forecastAPIrequest(props) {\n    let longitude = props.lon;\n    let latitude = props.lat;\n    let apiKey = \"999ce561ec0a25a794172c87e6a0379b\";\n    let forecastAPIurl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&exclude=current,hourly,minutely,alerts&appid=${apiKey}&units=metric`;\n    axios.get(forecastAPIurl).then(forecastAPIdata);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}