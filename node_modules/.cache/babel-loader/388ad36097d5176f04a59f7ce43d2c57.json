{"ast":null,"code":"var _jsxFileName = \"/Users/ielyzavetapanchenko/Documents/GitHub/React-Weather-App/src/TemperatureUnitButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TemperatureUnitButton(_ref) {\n  _s();\n\n  let {\n    setFUnits\n  } = _ref;\n  const [unit, setUnit] = useState(\"celsius\");\n\n  if (unit == \"celsius\") {\n    function convertToFahrenheit() {}\n\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"temperature-unit-button\",\n      onClick: convertToFahrenheit,\n      children: \"\\xB0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"temperature-unit-button\",\n      children: \"\\xB0C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(TemperatureUnitButton, \"n67kjtGMfKwprJ+mcpfrwxWUTPs=\");\n\n_c = TemperatureUnitButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"TemperatureUnitButton\");","map":{"version":3,"sources":["/Users/ielyzavetapanchenko/Documents/GitHub/React-Weather-App/src/TemperatureUnitButton.js"],"names":["React","useState","TemperatureUnitButton","setFUnits","unit","setUnit","convertToFahrenheit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,qBAAT,OAA8C;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAC3D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,SAAD,CAAhC;;AAEA,MAAIG,IAAI,IAAI,SAAZ,EAAuB;AACrB,aAASE,mBAAT,GAA+B,CAE9B;;AACD,wBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,yBAFZ;AAGE,MAAA,OAAO,EAAEA,mBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAbD,MAaO;AACL,wBACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,yBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AACF;;GAvBuBJ,qB;;KAAAA,qB","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function TemperatureUnitButton({ setFUnits }) {\n  const [unit, setUnit] = useState(\"celsius\");\n\n  if (unit == \"celsius\") {\n    function convertToFahrenheit() {\n        \n    }\n    return (\n      <button\n        type=\"button\"\n        className=\"temperature-unit-button\"\n        onClick={convertToFahrenheit}\n      >\n        °F\n      </button>\n    );\n  } else {\n    return (\n      <button type=\"button\" className=\"temperature-unit-button\">\n        °C\n      </button>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}